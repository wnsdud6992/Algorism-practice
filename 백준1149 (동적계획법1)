#include <stdio.h>

int Min(int a, int b) {
	return a > b ? b : a;                                //a>b가 참이면 b를 return, 거짓이면 a를 return함. min, max함수 만들때 자주 사용하는 비교연산자
}

int main() {
	int arr[3], tmp[3] = { 0, }, t[3] = { 0, };
	int n,total=0;
	scanf("%d", &n);
	for (int i = 1; i <= n; i++) {
		scanf("%d %d %d", &arr[0], &arr[1], &arr[2]);
		tmp[0] = t[0], tmp[1] = t[1], tmp[2] = t[2];
		t[0] = arr[0] + Min(tmp[1], tmp[2]);
		t[1] = arr[1] + Min(tmp[0], tmp[2]);
		t[2] = arr[2] + Min(tmp[0], tmp[1]);
	}
	
	total = Min(Min(t[0], t[1]), t[2]);
	printf("%d", total);
}

// DP는 모든 경우를 다 둘러보지만 완전탐색과는 좀 다르게 점화식을 이용한다. 각 경우마다 최소값을 만들도록 R,G,B를 구성하고 각각의 최종값중 최소값을 구함.
동적계획법 문제는 어떤식으로 문제를 해결할지 점화식을 찾던지, 완전탐색의 방법을 고려하는 등이 우선되어야 할 듯하다.
