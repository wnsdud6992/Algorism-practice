--톱니바퀴--
구현은 생각보다 복잡해 보이지 않은 막상 생각을 구현하려고 하니 조금 애매해졌다. 그러나 이런 시뮬레이션문제의 경우
주어진 경우수가 4개~6개 이렇게 적기 때문에 모든 경우에 대해 구현하여도 시간초과가 나지 않는다 
이 문제에서 나는 톱니바퀴도는 것을 deque를 이용하여 popleft, appendleft방식을 이용하였다. 큐의 특성을 알고있다면 톱니바퀴 구현이 어렵진 않다.
실수한점: 1,2,3,4번 톱니바퀴중 2,3번 톱니바퀴를 돌릴경우 왼쪽방향과 오른쪽방향은 독립적인 것이다. 1번 이나 4번은 1번에 의해 2번이 돌아가야 3번이나 4번이 돌아갈 여지가 생긴다.
그러나 2번을 돌렸을 때 1번이 안돌아간다고 3,4번이 안돌아 갈 이유가 없다. 이런 부분 조심하자


from collections import deque
arr=[deque(input()) for _ in range(4)]     #톱니바퀴 구현을 큐를 이용하여 구현, 연속된 숫자를 입력받고 하나씩 나눠쓰고 싶으면 int형으로 받지말고 input그대로 받아
k=int(input())                             # 문자형으로 하나씩 리스트에 저장되도록한다. 단 마지막에 0과 비교시 숫자 0이 아닌 문자 '0'과 비교해야한다.
r=[]
for i in range(k):
    a,b=map(int,input().split())
    r.append((a,b))

def turn(n,i):
    if i==1:
        x=arr[n].pop()
        arr[n].appendleft(x)
    elif i==-1:
        x=arr[n].popleft()
        arr[n].append(x)    

for i in r:
    n=i[0]-1
    if n==0:
        if arr[0][2]!=arr[1][6]:
            turn(0,i[1])
            if arr[1][2]!=arr[2][6]:
                turn(1,i[1]*(-1))
                if arr[2][2]!=arr[3][6]:
                    turn(2,i[1])
                    turn(3,i[1]*(-1))
                else: turn(2,i[1])
            else: turn(1,i[1]*(-1))
        else: turn(0,i[1])

    elif n==1:
        j=[0,0,0,0]
        if arr[0][2]!=arr[1][6]:
            j[0]=i[1]*(-1)
            j[1]=i[1]
        else: 
            j[0]=0
            j[1]=i[1]
            
        if arr[1][2]!=arr[2][6]:
            j[2]=i[1]*(-1)
            if arr[2][2]!=arr[3][6]:
                j[3]=i[1]
            else: j[3]=0
        else: j[2]=0
        
        for i in range(4):
            if j[i]!=0:
                turn(i,j[i])

    elif n==2:
        j=[0,0,0,0]
        if arr[2][2]!=arr[3][6]:
            j[3]=i[1]*(-1)
            j[2]=i[1]
        else: 
            j[3]=0
            j[2]=i[1]

        if arr[2][6]!=arr[1][2]:
            j[1]=i[1]*(-1)
            if arr[0][2]!=arr[1][6]:
                j[0]=i[1]
            else: j[0]=0
        else: j[1]=0
        
        for i in range(4):
            if j[i]!=0:
                turn(i,j[i])
    elif n==3:
        if arr[3][6]!=arr[2][2]:
            turn(3,i[1])
            if arr[2][6]!=arr[1][2]:
                turn(2,i[1]*(-1))
                if arr[0][2]!=arr[1][6]:
                    turn(1,i[1])
                    turn(0,i[1]*(-1))
                else: turn(1,i[1])
            else: turn(2,i[1]*(-1))
        else: turn(3,i[1])

total=0
if arr[0][0]=='0':
    total+=0
else: total+=1
if arr[1][0]=='0':
    total+=0
else: total+=2
if arr[2][0]=='0':
    total+=0
else: total+=4
if arr[3][0]=='0':
    total+=0
else: total+=8
    
print(total)
