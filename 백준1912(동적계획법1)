--연속합--  주어진 수열에서 연속으로 이뤄진 부분수열중 그 합이 가장 큰 경우를 추출
연속합의 특징을 파악해야 문제를 풀수 있었다. 연속합이 최대가 되려면 임의의 항까지 합이 0보다 작아지면 그 항까지는 의미가 없어지게 된다!
즉 이전 항까지 만들어진 부분수열이 음수가 되면 그 다음 항부터 새로운 부분수열을 만들어야 최대가 된다.
이때 i항까지 오는데 만든 최대합을 각각 dp[i]에 저장하여 마지막에 쭉 비교.

#include<stdio.h>

int Max(int a, int b) {
	return a > b ? a : b;
}

int dp[100001] = { 0, };

int main() {
	int n, i, j, sum = 0, arr[100000],  ans = -1001;
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}
	dp[0] = arr[0];
	for (i = 1; i < n; i++) {
		if (dp[i-1] > 0) {                         // 이전 항까지 만들수 있는 최대연속합이 양수인 경우 당연히 i항도 더해서 dp[i]에 최대합을 저장
			dp[i] = dp[i - 1] + arr[i];              
		}
		else {                                     // 이전 항까지 만들 수 있는 최대연속합이 음수인 경우 dp[i]에 새로운 값을 저장 
			dp[i] = arr[i];
		}
	}
	for (i = 0; i < n; i++) {
		ans = Max(ans, dp[i]);                     //모든 dp배열을 돌면서 각 항까지 최대연속합의 크기를 비교하고 그안에서 최대값을 추출.
	}
	printf("%d", ans);
}
