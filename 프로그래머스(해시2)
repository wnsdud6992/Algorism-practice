--전화번호 목록--
주어진 phone_book이라는 전화번호 목록에서 임의의 번호가 다른 번호의 접두사로 올경우 false를 반환하도록 하는 문제이다.
전화번호부 서로 비교시 두 번호중 짧은 것이 긴것에 접두사인지 확인하기 위해 startswith라는 메소드를 사용하였다.
그러나 효율성의 두가지 테스트 케이스에 대해 해결되지 않았다.

(1)
def solution(phone_book):
    for i in range(len(phone_book)-1):
        for j in range(i+1,len(phone_book)):
            if  phone_book[j].startswith(phone_book[i]) or phone_book[i].startswith(phone_book[j]):
                answer=False
                return answer
    answer = True
    return answer
    
    
새로운 방법
(2)
def solution(phone_book):
    phone_book.sort()
    for i in range(len(phone_book)-1):
        if  phone_book[i+1].startswith(phone_book[i]):
            answer=False
            return answer
    answer = True
    return answer
    
카카오같은 코테에서는 코드의 효율성 문제도 중요한 요소이다. 따라서 코드의 실행속도도 매우 중요하다.
(1)의 경우 for문을 두번 돌아야하고 if문 내에서 비교를 2번을 진행한다.
그러는 반면 (2)번은 가장먼저 sort함수로 정렬을 진행하여 접두사가 올 가능성이 있는 것끼리 뭉치게 했다. 그리고 바로 근접해있는 것과 접두사 비교를 하였다.
sort정렬을 하면 가장 작은값부터 오름차순으로 정렬하는데 접두사를 포함하고 있는 문자는 자연스레 길이가 더 길기에 접두사 뒤에 오게 된다.

문제자체는 어렵지 않았지만 효율성 문제로 오래걸렸고 또한 sort함수의 정확한 특징을 알고있으면 쉽게 풀 수 있는 문제였다. sort를 이용한다고 무조건 시간이 오래걸리는 것이 아니라
sort함수 일회 이용하여 for문을 반복적으로 사용하지 않을 수 있게 된다면 굉장히 효과적인 방법이란 것을 깨달았다.
  
