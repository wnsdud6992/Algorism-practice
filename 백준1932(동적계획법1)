#include<stdio.h>    //동적할당은 배열을 이용하여 계산된 지점까지는 저장해 놓고 각 상황별로 최선의 선택 후에 최종점에서 작게 나눠 선택한 것들을 총합

int Max(int a, int b) {
	return a > b ? a : b;
}

int main() {
	int n,total=0,i,j,a,start=0;
	int arr[500][501] = { 0, } ;            //이전 항들 대소비교시 각 첫째항의 이전 좌측항은 빈 항이므로 0으로 초기화한 값을 추가로 좌우측에 삽입
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		for (j = 1; j <= i+1; j++) {
			scanf("%d", &a);
			if (i == 0) {
				arr[i][j] = a;
				break;
			}
			else arr[i][j] = a + Max(arr[i - 1][j - 1], arr[i - 1][j]);    //새로 받은 문자중에 가장 큰 값을 선택하는 것이 아니라 이전 항들에서 둘중 최대값을 선택
		}
	}
	for (i = 1; i <= n; i++) {
		total = Max(total, arr[n - 1][i]);
	}
	printf("%d", total);
}
//처음으로 검색없이 한번에 맞힌 동적계획법1 문제이다. 큰 문제를 작은 각각의 작은 문제로 나누고 마지막에 최선의 경우를 고르는 문제.
