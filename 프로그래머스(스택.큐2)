--프린터--
priorities에 프린트해야 할 중요도가 담겨있고 location에 원하는 문서의 위치가 담겨있다. 원하는 문서가 언제 출력되는지 반환해라
- deque모듈을 이용하여 큐를 구현하였다. 중요도가 높은게 존재하면 뒤로 순서로 미뤄야하므로 큐의 왼쪽은 출력단, 오른쪽은 입력단으로 이용하였다.
출력단의 요소가 우선순위가 제일 높아 출력하는 경우 answer의 값을 1씩 증가시켜주고 우선순위 높은게 또 존재하면 가장 마지막에 넣는다.
각각의 경우에 location이 0인지 아닌지 판단하고 location값을 조절한다. location이 0인데 출력인 경우 이때 원하는 문서가 출력된 것이다.

from collections import deque
q=deque()
def solution(priorities, location):
    for i in priorities:
        q.append(i)
    answer = 0
    while q:
        tmp=q.popleft()
        if tmp>=max(q):
            answer+=1
            if location==0: break
            else: location-=1
        else: 
            q.append(tmp)
            if location==0: location=len(q)-1
            else: location-=1
    return answer
print(solution([2, 1, 3, 2]	,2))
