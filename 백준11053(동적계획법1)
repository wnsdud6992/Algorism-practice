--가장 긴 증가하는 부분수열--
주어진 수열에서 가장 긴 증가하는 부분수열의 항수를 출력.
n번째 항까지 가장 긴 증가하는 부분수열의 항수를 dp[n-1]에 담아 놓고 n+1항에서 이전에 존재하는 항들중 최대 개수를 선택해서 1을 더해 dp[n+1]에 저장.

#include <stdio.h>
arr[1000] = {0,};         // 수열을 저장할 배열
dp[1000] = { 0, };        // 그 항까지 부분수열의 최대 항수를 저장할 배열

int Max(int a, int b) {
	return a > b ? a : b;
}

int main() {
	int i,n,j, total,m=0,a;
	scanf("%d", &n);
	for (i = 0; i < n; i++) {
		scanf("%d", &arr[i]);
	}

	dp[0] = 1;
	for (i = 1; i < n; i++) {
		a = 0;
		for (j = i-1; j >= 0; j--) {          //임의의 i+1번째 항을 기준으로 이전 항들의 값중 i+1 항보다 작은 항까지 부분수열 개수가 최대가 되는 값에 1을 더해서 dp[i]에 저장 
			if (arr[i] > arr[j]) {
				a = Max(a, dp[j]);
			}
		}
		dp[i] = a + 1;
	}

	for (i = 0; i < n; i++) {
		m = Max(m, dp[i]);             //dp[]배열에 저장되어 있는 값들은 각 항까지의 부분수열의 최대 항수를 뜻함. 그러므로 최대값을 구하여 출력
	}
	printf("%d", m);
}
